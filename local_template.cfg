#  Copyright (c) 2021, 2023 MariaDB Corporation Ab.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA */
#

# This is the template for the config file local.cfg which describes the conditions on the
# box used for RQG testing
# ========================================================================================
# Recommended hardware + OS setup (High end QA sever but also notebook)
# - amount of RAM = ~ 3 GB * no of CPU cores * factor for hyperthreading
# - amount of tmpfs >= 0.5 * amount of RAM
# - no swap

# All variables which follow need to be finally defined.


# A huge directory where test results, binaries and maybe data of ongoing tests get stored.
# -----------------------------------------------------------------------------------------
# Using some HDD is recommended. For a high end QA server 6TB are sufficient.
use constant DEFAULT_STORE_DIR => '/data';

my $general_store_dir = $ENV{GENERAL_STORE_DIR};
if (not defined $general_store_dir or $general_store_dir eq '') {
    $general_store_dir = DEFAULT_STORE_DIR;
    say("INFO: The environment variable GENERAL_STORE_DIR is not set. Using the default '" .
        DEFAULT_STORE_DIR . "'.");
}
if (not -d $general_store_dir) {
    say("ERROR: The general store dir '$general_store_dir' does not exist or is not a directory.");
    say("The general store dir should be located on a filesystem with much (> 0.5 TB) free space.");
    say("RQG tools and build scripts will create there sub directories for storing test \n" .
        "results and binaries.");
    say("So either take care that the default '" . DEFAULT_STORE_DIR . "' exists or\n " .
        "set the environment variable GENERAL_STORE_DIR pointing to some fitting directory.");
    exit STATUS_ENVIRONMENT_FAILURE;
}

# A directory where the results of rqg_batch.pl or single rqg.pl runs should be stored.
# Neither the type of the filesystem nor the device behind are that important.
# But the data should survive a power loss or OS crash.
# And using a big filesystem with a lot free space is recommended.
$results_dir            = $general_store_dir . '/results';

# The directory containing the archives of the MariaDB installed binaries
# should be located in the same filesystem like $results_dir.
$binarch_dir            = $general_store_dir . '/binarchs';

# A directory within a fast preferably RAM based filesystem.
# --------------------------------------------------------------------------------------------------
# RAM based filesystems in combination with heavy loaded CPUs are usually more efficient than
# SSD's or HDD's for revealing bugs.
#
# Recommendation:
# Use the tmpfs /dev/shm because its relative big.
# InnoDB supports mmap I/O on '/dev/shm' under certain conditions in order to simulate some
# PMEM device without having a real one.
$rqg_fast_dir           = '/dev/shm/rqg';
# Per Marko:
# To test the non-mmap I/O on RAM disk, you can use /run/user/$UID .
#
# Hint/Observation: /run/user/$UID is serious smaller than /dev/shm. -> less concurrent RQG's
### $rqg_fast_dir           = '/run/user/1001';
# $rqg_fast_dir           = '/run/user/' . `id -u`;

# When using a real PMEM device
# sudo umount /mnt/mypmem/
# sudo mount $MYOPT /dev/pmem0 /mnt/mypmem/
# $MY_OPT=""       --> Use conventional file I/O and not Linux mmap.
#                      It should say that it is using O_DIRECT with 4096-byte block size.
#                  ==> InnoDB: File system buffers for log disabled (block size=4096 bytes)
# $MY_OPT="-o dax" --> Use the Linux mmap interface.
#                  ==> InnoDB: Memory-mapped log (10485760 bytes)
# sudo mkdir /mnt/mypmem/rqg
# sudo chmod 775 /mnt/mypmem/rqg
# sudo chgrp dev /mnt/mypmem/rqg
# Observation:
# PMEM mounted with -o dax + use of rr version 5.5.0 leads to
# FATAL /home/roc/rr/rr/src/record_syscall.cc:5561:process_mmap() errno: ENXIO
# $rqg_fast_dir           = '/mnt/mypmem/rqg';

# aio=1 + what follows -> InnoDB: Setting O_DIRECT on file ./ibdata1 failed
# mkdir $rqg_fast_dir

# A directory within a filesystem of a type like 'ext4' or similar.
# --------------------------------------------------------------------------------------------------
# It is recommended
# - that the filesystem type is != the one used for the location of $rqg_fast_dir ('tmpfs'?)
#   because we want to cover more filesystem types.
# - even if using a 'tmpfs' here at least not to assign '/dev/shm'.
# - to avoid overloading the device where the results (->$results_dir, set above) are located.
# - to avoid too excessive writing on SSD's.
#
# Variant a) if being forced to use some HDD where also $general_store_dir is located
#            Hint: Modify the definition of test batteries (*.cc) to use $rqg_slow_dir <= ~10%.
$rqg_slow_dir           = $general_store_dir . '/rqg';
# Variant b) if being able to use some HDD
#            - HDD -> Modify the definition of test batteries (*.cc) to use $rqg_slow_dir <= ~20%.
#            - SSD -> Modify the definition of test batteries (*.cc) to use $rqg_slow_dir <= ~30%.
#            where $general_store_dir is not located.
$rqg_slow_dir           = '/data1/rqg';
# Variant c) + recommended if having an amount of tmpfs >= 0.5 * amount of RAM
#            Use "util/MK_EXT4_VAR.sh" (sudo right required) and get
#            - the file /dev/shm/container with size ~ 1/3 of free space in tmpfs
#            - that file formatted as ext4 and mounted on '/dev/shm/rqg_ext4'
#            The fraction of tests which use or do not use $rqg_slow_dir becomes unimportant.
#            Most test battery definitions use 50% $rqg_fast_dir and 50% $rqg_slow_dir.
$rqg_slow_dir           = '/dev/shm/rqg_ext4';


# And if using rr and filesystems like ext4 than we need the following option.
# The double quotes around the single parameter settings are important.
# Otherwise certain scripts which analyze RQG logs will get trouble.
$rqg_slow_dbdir_rr_add  = '"--innodb_flush_method=fsync"';


# Additional box specific rr options if required.
# -----------------------------------------------
# Some a bit too old rr version meeting a too new Intel CPU needed the following setting.
# $rr_options_add = '--microarch=\"Intel Kabylake\"';
# Traces sent to Pernosco need --disable-cpuid-features-ext 0xfc230000,0x2c42,0xc
# In case rr works already well on your box than set it to empty string.
$rr_options_add         = '';

# The $build_thread (used for computation of ports) for the first RQG runner.
# In case of using rqg_batch.pl and going with several parallel RQG tests the range of
#    $build_thread   up till  $build_thread + 270 - 1
# will be used.
$build_thread           = 730;

1;

